Search.setIndex({"docnames": ["index", "magnet", "magnet.ic", "magnet.ize", "magnet.ron", "magnet.utils", "magnet.utils.mlx", "modules", "setup"], "filenames": ["index.rst", "magnet.rst", "magnet.ic.rst", "magnet.ize.rst", "magnet.ron.rst", "magnet.utils.rst", "magnet.utils.mlx.rst", "modules.rst", "setup.rst"], "titles": ["Welcome to magnet\u2019s documentation!", "magnet package", "magnet.ic package", "magnet.ize package", "magnet.ron package", "magnet.utils package", "magnet.utils.mlx package", "magnet.git", "setup module"], "terms": {"index": 0, "modul": [0, 7], "search": [0, 1, 3], "page": 0, "ic": [1, 7], "submodul": [1, 7], "field": [1, 3, 4, 7], "charg": [1, 2], "emp": [1, 2], "off": [1, 2, 5], "puls": [1, 2], "reset": [1, 2], "reson": [1, 2], "info": [1, 2, 3], "iz": [1, 7], "file": [1, 5, 7], "processor": [1, 3], "create_charg": [1, 3], "default_splitt": [1, 3], "load": [1, 3], "process": [1, 3], "save": [1, 3], "memori": [1, 7], "embedd": [1, 3], "delet": [1, 2, 3], "disconnect": [1, 2, 3], "embed_and_charg": [1, 3], "embed_and_stor": [1, 3], "embeddingpayload": [1, 3, 5], "embed": [1, 3, 5], "model": [1, 3, 5, 6], "text": [1, 3, 5], "ron": [1, 7], "llm": [1, 7], "util": [1, 7], "mlx": [1, 5], "mistral": [1, 4, 5], "data_class": [1, 7], "document": [1, 2, 5], "generatedpayload": [1, 5], "context": [1, 5], "prompt": [1, 6, 7], "queri": [1, 5], "result": [1, 5], "payload": [1, 2, 3, 5, 6], "global": [1, 7], "check_cuda": [1, 5], "normalize_text": [1, 5], "upload_to_s3": [1, 5], "revers": [1, 5], "huggingfac": [1, 7], "inferenceapi": [1, 5], "invok": [1, 5], "local": [1, 7], "markdown": [1, 7], "m_print": [1, 5], "milvu": [1, 7], "milvusdb": [1, 5], "creat": [1, 2, 3, 5], "delete_index": [1, 5], "qa_ref": [1, 4, 5], "class": [2, 3, 4, 5, 6], "server": [2, 4], "sourc": [2, 3, 4, 5, 6], "base": [2, 3, 4, 5, 6], "object": [2, 3, 4, 5, 6], "The": [2, 5], "i": [2, 4, 5], "respons": 2, "connect": 2, "nat": 2, "manag": 2, "stream": 2, "categori": 2, "publish": 2, "data": [2, 3], "arg": [2, 6], "str": [2, 3, 4, 5, 6], "url": 2, "attribut": 2, "current": 2, "nc": 2, "j": 2, "jetstream": 2, "api": 2, "async": [2, 3, 4], "name": [2, 3, 5], "none": [2, 3, 4, 5, 6], "specifi": 2, "match": 2, "print": 2, "an": [2, 5], "error": 2, "messag": 2, "doesn": 2, "t": [2, 4, 6], "exist": 2, "option": 2, "default": 2, "from": 2, "warn": 2, "no_categori": 2, "bool": [2, 4], "fals": [2, 3, 4, 5], "thei": 2, "don": 2, "success": 2, "whether": 2, "us": [2, 5], "dict": 2, "purg": 2, "session": 2, "cb": [2, 3, 4], "built": 2, "function": [2, 5], "window_s": 3, "768": 3, "overlap": 3, "76": 3, "nlp": 3, "true": 3, "raw": 3, "datafram": 3, "text_column": 3, "clean": [3, 5], "id_column": 3, "id": 3, "path": [3, 5], "splitter": 3, "ani": 3, "filenam": 3, "config": [3, 5], "verbos": 3, "limit": 3, "100": 3, "list": [3, 4, 5, 6], "attent": [5, 6], "feedforward": [5, 6], "modelarg": [5, 6], "dim": [5, 6], "head_dim": [5, 6], "hidden_dim": [5, 6], "n_head": [5, 6], "n_kv_head": [5, 6], "n_layer": [5, 6], "norm_ep": [5, 6], "vocab_s": [5, 6], "rmsnorm": [5, 6], "token": [5, 6], "decod": [5, 6], "encod": [5, 6], "eos_id": [5, 6], "pad_id": [5, 6], "transformerblock": [5, 6], "gener": [1, 4, 5, 6], "infer": [5, 6], "load_model": [5, 6], "check": 5, "cuda": 5, "avail": 5, "machin": 5, "provid": 5, "addit": 5, "inform": 5, "_": 5, "take": 5, "string": 5, "input": 5, "perform": 5, "variou": 5, "oper": 5, "remov": 5, "whitespac": 5, "replac": 5, "charact": 5, "curli": 5, "brace": 5, "paramet": 5, "placehold": 5, "need": 5, "return": 5, "version": 5, "file_or_dir": 5, "kei": 5, "tupl": 5, "your_access_kei": 5, "your_secret_kei": 5, "bucket": 5, "bucket_path": 5, "upload": 5, "s3": 5, "access": 5, "you": 5, "want": 5, "amazon": 5, "It": 5, "should": 5, "repres": 5, "": [5, 6], "locat": 5, "your": [4, 5], "param": 5, "contain": 5, "aw": 5, "secret": 5, "These": 5, "ar": 5, "authent": 5, "author": 5, "servic": 5, "type": 5, "where": 5, "within": 5, "directori": 5, "structur": 5, "For": 5, "exampl": 5, "root": 5, "can": 5, "set": 5, "overwrit": 5, "doc": [4, 5], "q": [4, 5], "int": [4, 6], "float": [4, 6], "ep": 6, "1e": 6, "05": 6, "model_path": 6, "properti": 6, "arrai": 6, "temp": 6, "0": [4, 6], "folder": 6, "packag": 7, "subpackag": 7, "content": 7, "setup": 7, "ask": [1, 4], "localinfer": [1, 5], "hf_token": 4, "m": 4, "mistralai": 4, "7b": 4, "instruct": 4, "v0": 4, "1": 4, "what": 4, "itinerari": 4, "n": 4, "8096": 4, "p": 4, "v": 4}, "objects": {"": [[1, 0, 0, "-", "magnet"]], "magnet": [[2, 0, 0, "-", "ic"], [3, 0, 0, "-", "ize"], [4, 0, 0, "-", "ron"], [5, 0, 0, "-", "utils"]], "magnet.ic": [[2, 0, 0, "-", "field"]], "magnet.ic.field": [[2, 1, 1, "", "Charge"], [2, 1, 1, "", "Resonator"]], "magnet.ic.field.Charge": [[2, 2, 1, "", "emp"], [2, 2, 1, "", "off"], [2, 2, 1, "", "on"], [2, 2, 1, "", "pulse"], [2, 2, 1, "", "reset"]], "magnet.ic.field.Resonator": [[2, 2, 1, "", "info"], [2, 2, 1, "", "off"], [2, 2, 1, "", "on"]], "magnet.ize": [[3, 0, 0, "-", "filings"], [3, 0, 0, "-", "memory"]], "magnet.ize.filings": [[3, 1, 1, "", "Processor"]], "magnet.ize.filings.Processor": [[3, 2, 1, "", "create_charge"], [3, 2, 1, "", "default_splitter"], [3, 2, 1, "", "load"], [3, 2, 1, "", "process"], [3, 2, 1, "", "save"]], "magnet.ize.memory": [[3, 1, 1, "", "Embedder"], [3, 1, 1, "", "EmbeddingPayload"]], "magnet.ize.memory.Embedder": [[3, 2, 1, "", "delete"], [3, 2, 1, "", "disconnect"], [3, 2, 1, "", "embed_and_charge"], [3, 2, 1, "", "embed_and_store"], [3, 2, 1, "", "info"], [3, 2, 1, "", "search"]], "magnet.ize.memory.EmbeddingPayload": [[3, 3, 1, "", "embedding"], [3, 3, 1, "", "model"], [3, 3, 1, "", "text"]], "magnet.ron": [[4, 0, 0, "-", "llm"]], "magnet.ron.llm": [[4, 1, 1, "", "Generate"]], "magnet.ron.llm.Generate": [[4, 2, 1, "", "ask"], [4, 2, 1, "", "on"]], "magnet.utils": [[5, 0, 0, "-", "data_classes"], [5, 0, 0, "-", "globals"], [5, 0, 0, "-", "huggingface"], [5, 0, 0, "-", "local"], [5, 0, 0, "-", "markdown"], [5, 0, 0, "-", "milvus"], [6, 0, 0, "-", "mlx"], [5, 0, 0, "-", "prompts"]], "magnet.utils.data_classes": [[5, 1, 1, "", "EmbeddingPayload"], [5, 1, 1, "", "GeneratedPayload"], [5, 1, 1, "", "Payload"]], "magnet.utils.data_classes.EmbeddingPayload": [[5, 3, 1, "", "document"], [5, 3, 1, "", "embedding"], [5, 3, 1, "", "model"], [5, 3, 1, "", "text"]], "magnet.utils.data_classes.GeneratedPayload": [[5, 3, 1, "", "context"], [5, 3, 1, "", "model"], [5, 3, 1, "", "prompt"], [5, 3, 1, "", "query"], [5, 3, 1, "", "result"]], "magnet.utils.data_classes.Payload": [[5, 3, 1, "", "document"], [5, 3, 1, "", "text"]], "magnet.utils.globals": [[5, 1, 1, "", "Utils"], [5, 4, 1, "", "reversal"]], "magnet.utils.globals.Utils": [[5, 2, 1, "", "check_cuda"], [5, 2, 1, "", "normalize_text"], [5, 2, 1, "", "upload_to_s3"]], "magnet.utils.huggingface": [[5, 1, 1, "", "InferenceAPI"]], "magnet.utils.huggingface.InferenceAPI": [[5, 2, 1, "", "invoke"]], "magnet.utils.local": [[5, 1, 1, "", "LocalInference"]], "magnet.utils.local.LocalInference": [[5, 2, 1, "", "invoke"]], "magnet.utils.markdown": [[5, 4, 1, "", "m_print"]], "magnet.utils.milvus": [[5, 1, 1, "", "MilvusDB"]], "magnet.utils.milvus.MilvusDB": [[5, 2, 1, "", "create"], [5, 2, 1, "", "delete_index"], [5, 2, 1, "", "off"], [5, 2, 1, "", "on"]], "magnet.utils.mlx": [[6, 0, 0, "-", "mistral"]], "magnet.utils.mlx.mistral": [[6, 1, 1, "", "Attention"], [6, 1, 1, "", "FeedForward"], [6, 1, 1, "", "Mistral"], [6, 1, 1, "", "ModelArgs"], [6, 1, 1, "", "RMSNorm"], [6, 1, 1, "", "Tokenizer"], [6, 1, 1, "", "TransformerBlock"], [6, 4, 1, "", "generate"], [6, 4, 1, "", "infer"], [6, 4, 1, "", "load_model"]], "magnet.utils.mlx.mistral.ModelArgs": [[6, 3, 1, "", "dim"], [6, 3, 1, "", "head_dim"], [6, 3, 1, "", "hidden_dim"], [6, 3, 1, "", "n_heads"], [6, 3, 1, "", "n_kv_heads"], [6, 3, 1, "", "n_layers"], [6, 3, 1, "", "norm_eps"], [6, 3, 1, "", "vocab_size"]], "magnet.utils.mlx.mistral.Tokenizer": [[6, 2, 1, "", "decode"], [6, 2, 1, "", "encode"], [6, 5, 1, "", "eos_id"], [6, 5, 1, "", "pad_id"]], "magnet.utils.prompts": [[5, 1, 1, "", "Prompts"]], "magnet.utils.prompts.Prompts": [[5, 2, 1, "", "qa_ref"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"welcom": 0, "magnet": [0, 1, 2, 3, 4, 5, 6, 7], "": 0, "document": 0, "indic": 0, "tabl": 0, "packag": [1, 2, 3, 4, 5, 6], "subpackag": [1, 5], "modul": [1, 2, 3, 4, 5, 6, 8], "content": [1, 2, 3, 4, 5, 6], "ic": 2, "submodul": [2, 3, 4, 5, 6], "field": 2, "iz": 3, "file": 3, "memori": 3, "ron": 4, "llm": 4, "util": [5, 6], "data_class": 5, "global": 5, "huggingfac": 5, "local": 5, "markdown": 5, "milvu": 5, "prompt": 5, "mlx": 6, "mistral": 6, "git": 7, "setup": 8}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Welcome to magnet\u2019s documentation!": [[0, "welcome-to-magnet-s-documentation"]], "Indices and tables": [[0, "indices-and-tables"]], "magnet package": [[1, "magnet-package"]], "Subpackages": [[1, "subpackages"], [5, "subpackages"]], "Module contents": [[1, "module-magnet"], [2, "module-magnet.ic"], [3, "module-magnet.ize"], [4, "module-magnet.ron"], [5, "module-magnet.utils"], [6, "module-magnet.utils.mlx"]], "magnet.ic package": [[2, "magnet-ic-package"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "magnet.ic.field module": [[2, "module-magnet.ic.field"]], "magnet.ize package": [[3, "magnet-ize-package"]], "magnet.ize.filings module": [[3, "module-magnet.ize.filings"]], "magnet.ize.memory module": [[3, "module-magnet.ize.memory"]], "magnet.ron package": [[4, "magnet-ron-package"]], "magnet.ron.llm module": [[4, "module-magnet.ron.llm"]], "magnet.utils package": [[5, "magnet-utils-package"]], "magnet.utils.data_classes module": [[5, "module-magnet.utils.data_classes"]], "magnet.utils.globals module": [[5, "module-magnet.utils.globals"]], "magnet.utils.huggingface module": [[5, "module-magnet.utils.huggingface"]], "magnet.utils.local module": [[5, "module-magnet.utils.local"]], "magnet.utils.markdown module": [[5, "module-magnet.utils.markdown"]], "magnet.utils.milvus module": [[5, "module-magnet.utils.milvus"]], "magnet.utils.prompts module": [[5, "module-magnet.utils.prompts"]], "magnet.utils.mlx package": [[6, "magnet-utils-mlx-package"]], "magnet.utils.mlx.mistral module": [[6, "module-magnet.utils.mlx.mistral"]], "magnet.git": [[7, "magnet-git"]], "setup module": [[8, "setup-module"]]}, "indexentries": {"magnet": [[1, "module-magnet"]], "module": [[1, "module-magnet"], [2, "module-magnet.ic"], [2, "module-magnet.ic.field"], [3, "module-magnet.ize"], [3, "module-magnet.ize.filings"], [3, "module-magnet.ize.memory"], [4, "module-magnet.ron"], [4, "module-magnet.ron.llm"], [5, "module-magnet.utils"], [5, "module-magnet.utils.data_classes"], [5, "module-magnet.utils.globals"], [5, "module-magnet.utils.huggingface"], [5, "module-magnet.utils.local"], [5, "module-magnet.utils.markdown"], [5, "module-magnet.utils.milvus"], [5, "module-magnet.utils.prompts"], [6, "module-magnet.utils.mlx"], [6, "module-magnet.utils.mlx.mistral"]], "charge (class in magnet.ic.field)": [[2, "magnet.ic.field.Charge"]], "resonator (class in magnet.ic.field)": [[2, "magnet.ic.field.Resonator"]], "emp() (magnet.ic.field.charge method)": [[2, "magnet.ic.field.Charge.emp"]], "info() (magnet.ic.field.resonator method)": [[2, "magnet.ic.field.Resonator.info"]], "magnet.ic": [[2, "module-magnet.ic"]], "magnet.ic.field": [[2, "module-magnet.ic.field"]], "off() (magnet.ic.field.charge method)": [[2, "magnet.ic.field.Charge.off"]], "off() (magnet.ic.field.resonator method)": [[2, "magnet.ic.field.Resonator.off"]], "on() (magnet.ic.field.charge method)": [[2, "magnet.ic.field.Charge.on"]], "on() (magnet.ic.field.resonator method)": [[2, "magnet.ic.field.Resonator.on"]], "pulse() (magnet.ic.field.charge method)": [[2, "magnet.ic.field.Charge.pulse"]], "reset() (magnet.ic.field.charge method)": [[2, "magnet.ic.field.Charge.reset"]], "embedder (class in magnet.ize.memory)": [[3, "magnet.ize.memory.Embedder"]], "embeddingpayload (class in magnet.ize.memory)": [[3, "magnet.ize.memory.EmbeddingPayload"]], "processor (class in magnet.ize.filings)": [[3, "magnet.ize.filings.Processor"]], "create_charge() (magnet.ize.filings.processor method)": [[3, "magnet.ize.filings.Processor.create_charge"]], "default_splitter() (magnet.ize.filings.processor method)": [[3, "magnet.ize.filings.Processor.default_splitter"]], "delete() (magnet.ize.memory.embedder method)": [[3, "magnet.ize.memory.Embedder.delete"]], "disconnect() (magnet.ize.memory.embedder method)": [[3, "magnet.ize.memory.Embedder.disconnect"]], "embed_and_charge() (magnet.ize.memory.embedder method)": [[3, "magnet.ize.memory.Embedder.embed_and_charge"]], "embed_and_store() (magnet.ize.memory.embedder method)": [[3, "magnet.ize.memory.Embedder.embed_and_store"]], "embedding (magnet.ize.memory.embeddingpayload attribute)": [[3, "magnet.ize.memory.EmbeddingPayload.embedding"]], "info() (magnet.ize.memory.embedder method)": [[3, "magnet.ize.memory.Embedder.info"]], "load() (magnet.ize.filings.processor method)": [[3, "magnet.ize.filings.Processor.load"]], "magnet.ize": [[3, "module-magnet.ize"]], "magnet.ize.filings": [[3, "module-magnet.ize.filings"]], "magnet.ize.memory": [[3, "module-magnet.ize.memory"]], "model (magnet.ize.memory.embeddingpayload attribute)": [[3, "magnet.ize.memory.EmbeddingPayload.model"]], "process() (magnet.ize.filings.processor method)": [[3, "magnet.ize.filings.Processor.process"]], "save() (magnet.ize.filings.processor method)": [[3, "magnet.ize.filings.Processor.save"]], "search() (magnet.ize.memory.embedder method)": [[3, "magnet.ize.memory.Embedder.search"]], "text (magnet.ize.memory.embeddingpayload attribute)": [[3, "magnet.ize.memory.EmbeddingPayload.text"]], "generate (class in magnet.ron.llm)": [[4, "magnet.ron.llm.Generate"]], "ask() (magnet.ron.llm.generate method)": [[4, "magnet.ron.llm.Generate.ask"]], "magnet.ron": [[4, "module-magnet.ron"]], "magnet.ron.llm": [[4, "module-magnet.ron.llm"]], "on() (magnet.ron.llm.generate method)": [[4, "magnet.ron.llm.Generate.on"]], "embeddingpayload (class in magnet.utils.data_classes)": [[5, "magnet.utils.data_classes.EmbeddingPayload"]], "generatedpayload (class in magnet.utils.data_classes)": [[5, "magnet.utils.data_classes.GeneratedPayload"]], "inferenceapi (class in magnet.utils.huggingface)": [[5, "magnet.utils.huggingface.InferenceAPI"]], "localinference (class in magnet.utils.local)": [[5, "magnet.utils.local.LocalInference"]], "milvusdb (class in magnet.utils.milvus)": [[5, "magnet.utils.milvus.MilvusDB"]], "payload (class in magnet.utils.data_classes)": [[5, "magnet.utils.data_classes.Payload"]], "prompts (class in magnet.utils.prompts)": [[5, "magnet.utils.prompts.Prompts"]], "utils (class in magnet.utils.globals)": [[5, "magnet.utils.globals.Utils"]], "check_cuda() (magnet.utils.globals.utils method)": [[5, "magnet.utils.globals.Utils.check_cuda"]], "context (magnet.utils.data_classes.generatedpayload attribute)": [[5, "magnet.utils.data_classes.GeneratedPayload.context"]], "create() (magnet.utils.milvus.milvusdb method)": [[5, "magnet.utils.milvus.MilvusDB.create"]], "delete_index() (magnet.utils.milvus.milvusdb method)": [[5, "magnet.utils.milvus.MilvusDB.delete_index"]], "document (magnet.utils.data_classes.embeddingpayload attribute)": [[5, "magnet.utils.data_classes.EmbeddingPayload.document"]], "document (magnet.utils.data_classes.payload attribute)": [[5, "magnet.utils.data_classes.Payload.document"]], "embedding (magnet.utils.data_classes.embeddingpayload attribute)": [[5, "magnet.utils.data_classes.EmbeddingPayload.embedding"]], "invoke() (magnet.utils.huggingface.inferenceapi method)": [[5, "magnet.utils.huggingface.InferenceAPI.invoke"]], "invoke() (magnet.utils.local.localinference method)": [[5, "magnet.utils.local.LocalInference.invoke"]], "m_print() (in module magnet.utils.markdown)": [[5, "magnet.utils.markdown.m_print"]], "magnet.utils": [[5, "module-magnet.utils"]], "magnet.utils.data_classes": [[5, "module-magnet.utils.data_classes"]], "magnet.utils.globals": [[5, "module-magnet.utils.globals"]], "magnet.utils.huggingface": [[5, "module-magnet.utils.huggingface"]], "magnet.utils.local": [[5, "module-magnet.utils.local"]], "magnet.utils.markdown": [[5, "module-magnet.utils.markdown"]], "magnet.utils.milvus": [[5, "module-magnet.utils.milvus"]], "magnet.utils.prompts": [[5, "module-magnet.utils.prompts"]], "model (magnet.utils.data_classes.embeddingpayload attribute)": [[5, "magnet.utils.data_classes.EmbeddingPayload.model"]], "model (magnet.utils.data_classes.generatedpayload attribute)": [[5, "magnet.utils.data_classes.GeneratedPayload.model"]], "normalize_text() (magnet.utils.globals.utils method)": [[5, "magnet.utils.globals.Utils.normalize_text"]], "off() (magnet.utils.milvus.milvusdb method)": [[5, "magnet.utils.milvus.MilvusDB.off"]], "on() (magnet.utils.milvus.milvusdb method)": [[5, "magnet.utils.milvus.MilvusDB.on"]], "prompt (magnet.utils.data_classes.generatedpayload attribute)": [[5, "magnet.utils.data_classes.GeneratedPayload.prompt"]], "qa_ref() (magnet.utils.prompts.prompts method)": [[5, "magnet.utils.prompts.Prompts.qa_ref"]], "query (magnet.utils.data_classes.generatedpayload attribute)": [[5, "magnet.utils.data_classes.GeneratedPayload.query"]], "result (magnet.utils.data_classes.generatedpayload attribute)": [[5, "magnet.utils.data_classes.GeneratedPayload.result"]], "reversal() (in module magnet.utils.globals)": [[5, "magnet.utils.globals.reversal"]], "text (magnet.utils.data_classes.embeddingpayload attribute)": [[5, "magnet.utils.data_classes.EmbeddingPayload.text"]], "text (magnet.utils.data_classes.payload attribute)": [[5, "magnet.utils.data_classes.Payload.text"]], "upload_to_s3() (magnet.utils.globals.utils method)": [[5, "magnet.utils.globals.Utils.upload_to_s3"]], "attention (class in magnet.utils.mlx.mistral)": [[6, "magnet.utils.mlx.mistral.Attention"]], "feedforward (class in magnet.utils.mlx.mistral)": [[6, "magnet.utils.mlx.mistral.FeedForward"]], "mistral (class in magnet.utils.mlx.mistral)": [[6, "magnet.utils.mlx.mistral.Mistral"]], "modelargs (class in magnet.utils.mlx.mistral)": [[6, "magnet.utils.mlx.mistral.ModelArgs"]], "rmsnorm (class in magnet.utils.mlx.mistral)": [[6, "magnet.utils.mlx.mistral.RMSNorm"]], "tokenizer (class in magnet.utils.mlx.mistral)": [[6, "magnet.utils.mlx.mistral.Tokenizer"]], "transformerblock (class in magnet.utils.mlx.mistral)": [[6, "magnet.utils.mlx.mistral.TransformerBlock"]], "decode() (magnet.utils.mlx.mistral.tokenizer method)": [[6, "magnet.utils.mlx.mistral.Tokenizer.decode"]], "dim (magnet.utils.mlx.mistral.modelargs attribute)": [[6, "magnet.utils.mlx.mistral.ModelArgs.dim"]], "encode() (magnet.utils.mlx.mistral.tokenizer method)": [[6, "magnet.utils.mlx.mistral.Tokenizer.encode"]], "eos_id (magnet.utils.mlx.mistral.tokenizer property)": [[6, "magnet.utils.mlx.mistral.Tokenizer.eos_id"]], "generate() (in module magnet.utils.mlx.mistral)": [[6, "magnet.utils.mlx.mistral.generate"]], "head_dim (magnet.utils.mlx.mistral.modelargs attribute)": [[6, "magnet.utils.mlx.mistral.ModelArgs.head_dim"]], "hidden_dim (magnet.utils.mlx.mistral.modelargs attribute)": [[6, "magnet.utils.mlx.mistral.ModelArgs.hidden_dim"]], "infer() (in module magnet.utils.mlx.mistral)": [[6, "magnet.utils.mlx.mistral.infer"]], "load_model() (in module magnet.utils.mlx.mistral)": [[6, "magnet.utils.mlx.mistral.load_model"]], "magnet.utils.mlx": [[6, "module-magnet.utils.mlx"]], "magnet.utils.mlx.mistral": [[6, "module-magnet.utils.mlx.mistral"]], "n_heads (magnet.utils.mlx.mistral.modelargs attribute)": [[6, "magnet.utils.mlx.mistral.ModelArgs.n_heads"]], "n_kv_heads (magnet.utils.mlx.mistral.modelargs attribute)": [[6, "magnet.utils.mlx.mistral.ModelArgs.n_kv_heads"]], "n_layers (magnet.utils.mlx.mistral.modelargs attribute)": [[6, "magnet.utils.mlx.mistral.ModelArgs.n_layers"]], "norm_eps (magnet.utils.mlx.mistral.modelargs attribute)": [[6, "magnet.utils.mlx.mistral.ModelArgs.norm_eps"]], "pad_id (magnet.utils.mlx.mistral.tokenizer property)": [[6, "magnet.utils.mlx.mistral.Tokenizer.pad_id"]], "vocab_size (magnet.utils.mlx.mistral.modelargs attribute)": [[6, "magnet.utils.mlx.mistral.ModelArgs.vocab_size"]]}})